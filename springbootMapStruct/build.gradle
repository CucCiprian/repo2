
/*
buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
   
     classpath "gradle.plugin.org.inferred:gradle-processors:2.2.0"
    }
}


plugins {
    id 'org.springframework.boot' version '2.1.6.RELEASE'
    id 'java'
    id 'net.ltgt.apt' version '0.20'
}

apply plugin: 'io.spring.dependency-management'
apply plugin: "org.inferred.processors"
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'application'
apply plugin: 'net.ltgt.apt-eclipse'

def queryDslVersion = '4.1.3'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

mainClassName = 'springbootMapStruct.Library'
jar {
    baseName = 'JPAProj'
    version = '0.0.1-SNAPSHOT'
  manifest{
  attributes('Main-Class':"Main.Main")
  }
}
sourceCompatibility = 1.8

dependencies {

    implementation  'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    
    compile 'org.springframework.boot:spring-boot-autoconfigure'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
     compile 'javax.inject:javax.inject:1'
    compile 'org.postgresql:postgresql:42.2.5'
    compile 'org.liquibase:liquibase-core'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor (
        "com.querydsl:querydsl-apt:${queryDslVersion}:jpa",
        "org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.2.Final",
        "javax.annotation:javax.annotation-api:1.3.2",
        'org.projectlombok:lombok:1.18.8',
        "org.mapstruct:mapstruct-processor:1.3.0.Final"
    )

    compile("com.querydsl:querydsl-core:${queryDslVersion}")
    compile("com.querydsl:querydsl-jpa:${queryDslVersion}")        
    implementation "org.mapstruct:mapstruct:1.3.0.Final"
    testCompile('org.springframework.boot:spring-boot-starter-test')
    
    testCompile('com.h2database:h2')
testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
testAnnotationProcessor "org.mapstruct:mapstruct-processor:1.3.0.Final"
}

test {
    useJUnitPlatform()
}
    /*
    dependencies {
        compile('org.springframework.boot:spring-boot-starter')
        compile('org.springframework.boot:spring-boot-starter-web')
        compile('org.springframework.boot:spring-boot-starter-data-jpa')
        compile('org.springframework.boot:spring-boot-starter-test')
        compile 'javax.inject:javax.inject:1'
        compile 'org.postgresql:postgresql:42.2.5'
        compile("org.liquibase:liquibase-core")
        
        compile group: 'org.hibernate', name: 'hibernate-gradle-plugin', version: '5.4.3.Final'
        compile 'org.springframework.boot:spring-boot-autoconfigure'
        implementation "org.mapstruct:mapstruct:1.3.0.Final"
       compile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.7.3'
        compileOnly 'org.projectlombok:lombok:1.18.8'
        compile("com.querydsl:querydsl-core:${queryDslVersion}")
        compile("com.querydsl:querydsl-jpa:${queryDslVersion}")
        
        // https://mvnrepository.com/artifact/org.hibernate/hibernate-java8
    compile group: 'org.hibernate', name: 'hibernate-java8', version: '5.0.0.CR1'
        
        annotationProcessor (
            "com.querydsl:querydsl-apt:${queryDslVersion}:jpa",
            "org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.2.Final",
            "javax.annotation:javax.annotation-api:1.3.2",
            'org.projectlombok:lombok:1.18.8',
            "org.mapstruct:mapstruct-processor:1.3.0.Final"
        )
        
        
        
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('com.h2database:h2')
    testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
    testAnnotationProcessor "org.mapstruct:mapstruct-processor:1.3.0.Final"
    }
    
*/   

plugins {
    //id 'org.asciidoctor.convert' version '1.5.3'
    id 'org.springframework.boot' version '2.1.6.RELEASE'
    id 'java'
    id 'eclipse'
    id "org.inferred.processors" version "2.2.0"
}

apply plugin: 'io.spring.dependency-management'

//apply plugin: 'java'
//apply plugin: 'eclipse'
//apply plugin: 'org.springframework.boot'

jar {
     baseName = 'springbootMapStruct'
     version = '0.0.1-SNAPSHOT'
     manifest {
        attributes("Main-Class": "springbootMapStruct.Library")
     }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

def queryDslVersion = '4.1.3'
def mapstructVersion = "1.3.0.Final"
/*
compileJava {
    options.compilerArgs << "-s"
    options.compilerArgs << "$projectDir/.apt_generated"
}
*/
dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-jdbc")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile 'javax.inject:javax.inject:1'
    compile 'org.postgresql:postgresql:42.2.5'
    compile("org.liquibase:liquibase-core")
// https://mvnrepository.com/artifact/org.mockito/mockito-core
testCompile group: 'org.mockito', name: 'mockito-core', version: '3.0.0'


    //compile 'org.springframework.boot:spring-boot-autoconfigure'

    compile("com.querydsl:querydsl-core:${queryDslVersion}")
    compile("com.querydsl:querydsl-jpa:${queryDslVersion}")

    implementation("org.mapstruct:mapstruct:${mapstructVersion}")

    compile "com.querydsl:querydsl-jpa:${queryDslVersion}"
    annotationProcessor (
        "com.querydsl:querydsl-apt:${queryDslVersion}:jpa",
        "org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.2.Final",
        "org.mapstruct:mapstruct-processor:${mapstructVersion}",
        //"javax.annotation:javax.annotation-api:1.3.2",
    )

    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('com.h2database:h2')
    testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
}
